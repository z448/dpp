#!/usr/bin/env perl

use warnings;
use strict;
use Term::ANSIColor;
use Cydia::Control;
use JSON::Tiny qw(encode_json);
use feature 'say';

my $dis_req;
my %ctrl;
my $ctrl_json;

unless($ARGV[0]){
     $dis_req='IO-All';
 } else { $dis_req=$ARGV[0] }

$dis_req =~ s/\:\:/\-/g;

my $m = get_control($dis_req);

sub deps {
    my @deps;
     for my $hash(@{$m->{dependency}}){
         if ($$hash{phase} eq 'runtime'){
             push @deps, $$hash{module};
     }
 }
 return \@deps;
}

sub make_control {
    my @control;
    my %control;

    while (my ($key, $value) = each %ctrl) {

        unless ($key eq 'Depends'){
            $control{ 'line' } = $key."\:\ ".$ctrl{$key};
            push @control, {%control};

        } else {
            my $deps_line;
            for (@{$ctrl{$key}}){
                unless($_ eq 'perl'){
                    s/\:\:/\-/g;
                    $deps_line .= "lib".lc($_)."\-p5"."\,\ ";
                } else { 
                    $deps_line .= "perl\,\ "; }
            }

            $control{ 'line' } = $key."\:\ ".$deps_line;
            push @control,{%control};
        }

    }
    return \@control;
}



sub term_width {  # --------------------check terminal width so we can print pretty
    my @w;
    unless( chomp(my $stty = qx!which stty!) ) {
        return 80;  # --------------------------------set default terminal size
    } 
    else {    # --------------parse stty output and set real terminal width
        my @x = qx!stty -a!; 
        my @y = split(/;/,$x[0]);
        @w = split(/columns/,$y[2]); 
        $w[0] =~ s/^\s+|\s+$//g;
        return $w[0];
    }
}

sub render {
    my $term=term_width();
    # json
    print "\n".("_"x$term)."\n".colored(['black on_bright_white'],'JSON CONTROL')."\n";#.("-"x$term)."\n";
    my $control = encode_json make_control(); print $control;

    # control   
    print "\n\n".("_"x$term)."\n".colored(['black on_bright_white'],'DPKG CONTROL')."\n";#.("-"x$term)."\n";
    for (@{make_control()}){ print $_->{'line'}."\n" }
    print "".("-"x$term)."\n\n";
}

$ctrl{Package} = 'lib'.lc $m->{name}.'-p5';
$ctrl{Name} = $m->{name};
$ctrl{Description} = $m->{abstract};
$ctrl{Author} = $m->{author};
$ctrl{Version} = $m->{version};
$ctrl{Depends} =  deps();
