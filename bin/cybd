#!/usr/bin/env perl
# repath and archive finished build on remote host

use 5.010;
use warnings;
use strict;

use JSON::PP;
use File::Find;
use File::Copy;
use Data::Printer;
use Term::ANSIColor;
use FindBin;
use lib "$FindBin::Bin/../lib";
use open qw< :encoding(UTF-8) >;
use Cydia::Meta;

my @directories = ( "$ENV{HOME}/.cypm/pool/usr/local/lib/perl5" );
my @packlist_orig;
my $p5 = sub {
     my @v5 = qx|perl -v|;
     my $v5 = '';
     for( @v5 ){
         if( /\(v5/ ){ s/(.*?\(v)(5.*?)\)(.*)/$1$2/; $v5 = $2 and last; }
     }
     return $v5;
};

my $p5v = $p5->();


# path for each arch needs to be resolved; see DATA section (1) and ExtUtils::MakeMaker docs
unlink("usr/local/lib/perl5/lib/perl5/arm-iphoneos-2level/auto/ExtUtils/MakeMaker/.packlist");
move( "usr/local/lib/perl5/man", "usr/local/man" );
move( "usr/local/lib/perl5/bin", "usr/local/bin" );
move( "usr/local/lib/perl5/lib/perl5", "usr/local/lib/perl5/lib/".$p5v );
move( "usr/local/lib/perl5/lib", "usr/local/lib/perl5/site_perl" );


sub wanted { 
    if ( $_ eq '.packlist' ){
        chomp;
        push @packlist_orig, "$File::Find::dir/$_";
    }
    return \@packlist_orig 
}
find(\&wanted, @directories );

say "original packlist";
say @packlist_orig; 

sub make_pack { 
    my $pm = shift;
    my $ar = <<"_DEB";
    cd $pm; tar -xf data.tar.gz;
    rm data.tar.gz;
    tar czf ../data.tar.gz us*;
    cd DEBIAN/;
    tar czf ../../control.tar.gz *;
    cd ../..;
    echo 2.0 > debian-binary;
    arfp r $pm.deb debian-binary control.tar.gz data.tar.gz;
_DEB
    #tar czf ../data.tar.gz [a-z]*;
    my $package = sub {
        my $packer = shift;
        my $status  = system($packer);
        say "make_pack: status-> $status";
        return $status;
    }; 
    my $s_pack = $package->($ar);
    say "make_pack: \$s_pack $s_pack";
    return $s_pack;

    #my $clean = sub {
    #    my $mess = shift;
    #    say 'now in make_pack->$clean';
    #    my $s_clean = system("rm -rf $mess");
    #    return $s_clean;
    #};
#    my $usr = 'usr';
#    my $s_clean = $clean->($usr);
#    return $s_clean;
}

my $check_pack = sub {
    my $p = shift;
    my @m = @$p;

    for my $pack( @m ){
            say "\ncheck_pack received packlist for $pack->{ pm_name }";
            say "\tpath: $pack->{ path }"; print "check_pack processing content: \n";
            say "\t".$_ for @{$pack->{ packlist }};
    
            my $make_path = system("mkdir -p $pack->{ pkg }/DEBIAN");
            my $control = system("touch $pack->{ pkg }/DEBIAN/".'control');
            my $fh = undef;
            say 'check_pack: creating control file for '."$pack->{ pkg }";
            my $fn = "$ENV{HOME}/.cypm/pool/$pack->{ pkg }/DEBIAN/".'control';
            open( $fh, '>', $fn ) or die "can't open $fn: $!";
            print $fh control("$pack->{pm_name}") . "\n";
            close $fh;
            print 'control file content:'."\n". control("$pack->{pm_name}") . "\n";

            my $packlist_fh = undef;
            open( $packlist_fh, "> $pack->{ path }" ) or die "cant open it $!";
            #open( $packlist_fh, "> ./.pack.list" ) or die "cant open it $!";
            for(@{$pack->{ packlist }}){
                print $packlist_fh $_."\n";
            }
            close $packlist_fh;

            my $mv = system("mv $pack->{path} $pack->{pkg}/");
            my $tar = system("tar cz -T '$pack->{pkg}/.packlist' -f '$pack->{pkg}/data.tar.gz'");
            my $status = make_pack($pack->{ pkg });
            say colored(['red'],"pm::ok > ")."$pack->{ pkg } ready (deb in stash)" unless $status;
            #my $cleanup = $clean->($pack->{ pkg });
            #say colored(['blue on_white'],"$pack->{ pkg } data pack moved to  stash") unless $cleanup;
            say "check_pack: status \$status->$status";
            my $div = web($pack->{ pm_name} );
            say "html inject -> ok" unless $div;
    }
};

my $list_pack = sub {
    my $p = shift;
    my @meta = ();

    say "list_pack received \$p \t-> $p\ncontent is: ";
    for( @$p ){ say "\t$_" }

    # if( /perl5\/lib\/perl5/ ){
    #   pop @$p;

    for my $path( @$p ){
        my $pm_name = $path; $pm_name =~ s/(auto.*?\/)(.*?)(\/\.packlist)/$2/; $pm_name = $2;
        $pm_name =~ s/\//\:\:/g;
        open( my $fh, $path );
        my ( @pack ) = ();
        while(<$fh>){
            my $base = qr/$ENV{HOME}/; 
            chomp;
            say "list_pack: before skip \t$_";
            if( /\.cypm/ ){
                s/(.*?\.cypm\/.*?\/)(.*)/$2/;
                s/(usr\/local\/lib\/perl5\/)(lib\/perl5)(.*)/$1site_perl\/$p5v$3/;
                s/(usr\/local\/)(lib\/perl5\/bin)(.*)/$1bin$3/;
                s/(usr\/local\/)(lib\/perl5\/man)(.*)/$1man$3/;
                push @pack, $_ unless /perllocal/ and say "adding into packlist $_"
            }
        }; say "packlist repath done:".@pack;

        my $meta = meta($pm_name);
        my $pkg = $meta->{pkg};
        my $pack = {
            pkg         =>  $pkg,
            pm_name     =>  $pm_name,
            path        =>  $path,
            packlist    =>  \@pack,
        };         
    push @meta, $pack;
    close $fh;
    }
    $check_pack->( \@meta );
};

$list_pack->(\@packlist_orig);



__DATA__

1.
a)
perl -V:install.* 
installarchlib='/usr/local/lib/perl5/5.14.4/arm-iphoneos-2level';
installbin='/usr/local/bin';
installhtml1dir='';
installhtml3dir='';
installman1dir='';
installman3dir='';
installprefix='/usr/local';
installprefixexp='/usr/local';
installprivlib='/usr/local/lib/perl5/5.14.4';
installscript='/usr/local/bin';
installsitearch='/usr/local/lib/perl5/site_perl/5.14.4/arm-iphoneos-2level';
installsitebin='/usr/local/bin';
installsitehtml1dir='';
installsitehtml3dir='';
installsitelib='/usr/local/lib/perl5/site_perl/5.14.4';
installsiteman1dir='';
installsiteman3dir='';
installsitescript='/usr/local/bin';
installstyle='lib/perl5';
installusrbinperl='define';
installvendorarch='';
installvendorbin='';
installvendorhtml1dir='';
installvendorhtml3dir='';
installvendorlib='';
installvendorman1dir='';
installvendorman3dir='';
installvendorscript='';

2)
perl -le print join $/, @INC
/var/mobile/Documents/pm2deb/local/lib/perl5
/var/mobile/Documents/pm2deb/lib
/var/root/.cypm/.stash/tools/usr/share/perl5
/usr/local/lib/perl5/site_perl/5.14.4/arm-iphoneos-2level
/usr/local/lib/perl5/site_perl/5.14.4
/usr/local/lib/perl5/5.14.4/arm-iphoneos-2level
/usr/local/lib/perl5/5.14.4
.

